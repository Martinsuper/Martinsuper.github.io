"use strict";(self.webpackChunkynote=self.webpackChunkynote||[]).push([[817],{3598:(e,t,i)=>{i.r(t),i.d(t,{data:()=>o});const o={key:"v-0bb1ecee",path:"/justnote/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/Springboot/Springboot%E4%BA%8B%E4%BB%B6%E5%8F%91%E5%B8%83.html",title:"Springboot 之事件发布",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"SpringContext 事件类型",slug:"springcontext-事件类型",children:[]},{level:2,title:"Springboot 事件类型",slug:"springboot-事件类型",children:[]}],filePathRelative:"justnote/编程基础/Springboot/Springboot事件发布.md",git:{updatedTime:null}}},1996:(e,t,i)=>{i.r(t),i.d(t,{default:()=>n});const o=(0,i(6252).uE)('<h1 id="springboot-之事件发布" tabindex="-1"><a class="header-anchor" href="#springboot-之事件发布" aria-hidden="true">#</a> Springboot 之事件发布</h1><h2 id="springcontext-事件类型" tabindex="-1"><a class="header-anchor" href="#springcontext-事件类型" aria-hidden="true">#</a> SpringContext 事件类型</h2><ul><li><code>ContextStartedEvent</code><ul><li>当 ApplicationContext 启动的时候触发事件</li></ul></li><li><code>ContextRefreshedEvent</code><ul><li>当 ApplicationContext 被初始化或刷新时触发事件</li></ul></li><li><code>ContextStoppedEvent</code><ul><li>当 ApplicationContext 停止的时候触发事件</li></ul></li><li><code>ContextClosedEvent</code><ul><li>当 ApplicationContext 关闭的时候触发事件</li></ul></li></ul><h2 id="springboot-事件类型" tabindex="-1"><a class="header-anchor" href="#springboot-事件类型" aria-hidden="true">#</a> Springboot 事件类型</h2><ul><li><code>ApplicationStartingEvent</code></li><li><code>ApplicationStartedEvent</code></li><li><code>ApplicationReadyEvent</code></li><li><code>ApplicationPreparedEvent</code></li><li><code>ApplicationFailedEvent</code></li><li><code>ApplicationEnvironmentPreparedEvent</code></li><li><code>ApplicationContextInitializedEvent</code></li><li><code>SpringApplicationEvent</code></li></ul>',5),n={render:function(e,t){return o}}}}]);